#!/bin/bash

DIR_JUNK='junk'
DIR_PROFILE='profile'
DIR_OUT='results'
DIR_DATA="fasta"
echo "Checking to see if blastpgp profile is in the folder:"
sleep 1


OUTPUT="$(ls fasta | cut -d'.' -f1)"

# THIS IS THE PART THAT EITHER RUN PSIBLAST/FASTPSSM (NANJIANG TAKE CARE OF THIS PART) OR CHECK IF THERE IS/ARE PSSM/s AVAILABLE SOMEWHERE

if [ 'ls -A DIR_PROFILE/${OUTPUT}.profile' ]

then 
	echo "contains files"
else
	echo "RUNNING PSIBLAST"
	#blastpgp -F F -a 8 -j 3 -b 3000 -e 1 -h 1 e-3 -d database/formatdb/Uniref90.fasta -i $DIR_DATA/${OUTPUT}.fasta -o $DIR_JUNK/${OUTPUT}.blastPsiOutTmp -C $DIR_JUNK/${OUTPUT}.chk -Q $DIR_PROFILE/${OUTPUT}.profile
	../../ncbi-blast-2.4.0+/bin/psiblast -evalue 1  -num_iterations 3 -num_threads 4 -comp_based_stats 0 -query $DIR_DATA/P04439.fasta -db database/formatdb/Uniref90.fasta -out_ascii_pssm $DIR_PROFILE/P04439.profile
fi

echo "Checking to see if blastpgp is running:"
sleep 1

if  `pgrep blastpgp >/dev/null 2>&1`
then
    echo "blastpgp Running"
else
    echo "blastpgp not Running"
    
fi

echo "RUNNING LOCTREE2"
loctree2 --fasta $DIR_DATA/${OUTPUT}.fasta --blastmat $DIR_PROFILE/${OUTPUT}.profile --resfile $DIR_OUT/${OUTPUT}.lc2.res --domain euka

echo "RUNNING SHERLOC2"
python ../../SherLoc2/src/sherloc2_prediction.py -fasta=$DIR_DATA/${OUTPUT}.fasta -origin=animal -output=simple -result=$DIR_OUT/${OUTPUT}.s2.res

echo "RUNNING MULTILOC2"
python ../../MultiLoc2/src/multiloc2_prediction.py -fasta=$DIR_DATA/${OUTPUT}.fasta -origin=animal -output=simple -result=$DIR_OUT/${OUTPUT}.m2.res

echo "RUNNING YLOC"
#python ../../YLocSOAPclient/yloc.py $DIR_DATA/${OUTPUT}.fasta YLow-HighRes Animals No Simple > $DIR_OUT/${OUTPUT}.yloc.res

echo "RUNNING CELLO"

#python cello.py

echo "CHECK IF ALL THE FILES OF THE PREDICTORS ARE IN THE FOLDER RESULTS"

file=$DIR_OUT/${OUTPUT}.s2.res
file1=$DIR_OUT/${OUTPUT}.m2.res
file2=$DIR_OUT/${OUTPUT}.lc2.res

# WE NEED TO CHECK IF AT LEAST LOCTREE2,SHERLOC2 AND MULTILOC2 RESULTS ARE AVAILABLE, OTHERWISE WE NEED TO STOP THE PROCESS.
# MANY TIMES COULD HAPPEN THAT THE SEQUENCE ARE TOO SHORT SO WE DO NOT GET ANY PREDICTION.

if [[ -f "$file" && "$file1" && "$file2" ]]
then
	echo "$file $file1 $file2 found."
	echo "The files of SherLoc2, LocTree2 and MultiLoc2 are here, so continue"
	
else
	echo "No, the files of SherLoc2, LocTree2 and MultiLoc2 are not here,  so I am killing the process"
	exit 1
fi

sleep 1

echo "Parse prediction and obtain test file"

python parse_prediction_subcons.py

sleep 1

echo "Create dat file as input for SubCons"

python subcons-file-dat.py

sleep 1

echo "Obtain final prediction with SubCons"

python subcons-forest.py $DIR_OUT/dat-files/prediction.dat

#REMOVE UNNECESSARY INTERMEDIATE FILES
rm results/*.res 
rm results/dat-files/*.dat
