##################################################
# file: YLocSOAP_client.py
# 
# client stubs generated by "ZSI.generate.wsdl2python.WriteServiceModule"
#     /usr/bin/wsdl2py YLocSOAP?WSDL
# 
##################################################

from YLocSOAP_types import *
import urlparse, types
from ZSI.TCcompound import ComplexType, Struct
from ZSI import client
from ZSI.schema import GED, GTD
import ZSI

# Locator
class YLoc_Prediction_Web_ServiceLocator:
    YLoc_Port_address = "http://abi.inf.uni-tuebingen.de/Services/YLocSOAP"
    def getYLoc_PortAddress(self):
        return YLoc_Prediction_Web_ServiceLocator.YLoc_Port_address
    def getYLoc_Port(self, url=None, **kw):
        return YLoc_BindingSOAP(url or YLoc_Prediction_Web_ServiceLocator.YLoc_Port_address, **kw)

# Methods
class YLoc_BindingSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

    # op: predict
    def predict(self, request, **kw):
        if isinstance(request, predictRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="urn:YLocSOAP.wsdl#predict", **kw)
        # no output wsaction
        response = self.binding.Receive(predictResponse.typecode)
        return response

class predictRequest:
    def __init__(self, **kw):
        """Keyword parameters:
        input -- part input
        """
        self._input =  kw.get("input")
predictRequest.typecode = Struct(pname=("urn:YLocSOAP.wsdl","predict"), ofwhat=[ns0.PredictionRequestType_Def(pname="input", aname="_input", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=predictRequest, encoded="urn:YLocSOAP.wsdl")

class predictResponse:
    def __init__(self, **kw):
        """Keyword parameters:
        predictions -- part predictions
        """
        self._predictions =  kw.get("predictions")
predictResponse.typecode = Struct(pname=("urn:YLocSOAP.wsdl","predictResponse"), ofwhat=[ns0.PredictionListType_Def(pname="predictions", aname="_predictions", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=predictResponse, encoded="urn:YLocSOAP.wsdl")
